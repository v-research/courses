Blocks:
{'_b9hwh2VLEeurzoz2zKnPPg': {'name': 'scegli q', 'type': 'FunctionalBlock'},
'_b9hwhmVLEeurzoz2zKnPPg': {'name': 'Scegli p', 'type': 'FunctionalBlock'},
'_b9hwiGVLEeurzoz2zKnPPg': {'name': 'test primalit√†',
                           'type': 'FunctionalArchitecture'},
'_b9hwj2VLEeurzoz2zKnPPg': {'name': 'calcola phi(n)=(p-1)(q-1)',
                           'type': 'FunctionalBlock'},
'_b9hwjmVLEeurzoz2zKnPPg': {'name': 'calcola n=p*q', 'type': 'FunctionalBlock'},
'_b9hwk2VLEeurzoz2zKnPPg': {'name': 'Memory', 'type': 'FunctionalArchitecture'},
'_b9hwkGVLEeurzoz2zKnPPg': {'name': 'scegli e random < phi(n)',
                           'type': 'FunctionalBlock'},
'_b9hwkWVLEeurzoz2zKnPPg': {'name': 'test coprimi', 'type': 'FunctionalBlock'},
'_b9hwkmVLEeurzoz2zKnPPg': {'name': 'calcola d= e*d=1 mod phi(n)',
                           'type': 'FunctionalBlock'},
'_b9hwl2VLEeurzoz2zKnPPg': {'name': 'Memory', 'type': 'FunctionalArchitecture'},
'_b9hwlGVLEeurzoz2zKnPPg': {'name': 'calcolo m^e', 'type': 'FunctionalBlock'},
'_b9hwlmVLEeurzoz2zKnPPg': {'name': 'calcolo m^e mod n', 'type': 'other'},
'_b9hwm2VLEeurzoz2zKnPPg': {'name': 'calcola c^d', 'type': 'FunctionalBlock'},
'_b9hwmGVLEeurzoz2zKnPPg': {'name': 'input', 'type': 'other'},
'_b9hwmWVLEeurzoz2zKnPPg': {'name': 'output', 'type': 'other'},
'_b9hwmmVLEeurzoz2zKnPPg': {'name': 'input', 'type': 'other'},
'_b9hwnGVLEeurzoz2zKnPPg': {'name': 'calcola c^d mod n',
                           'type': 'FunctionalBlock'},
'_b9hwnWVLEeurzoz2zKnPPg': {'name': 'output', 'type': 'other'},
'_b9hwnmVLEeurzoz2zKnPPg': {'name': 'Memory', 'type': 'FunctionalArchitecture'}}

Flows:
{1: {'information': 'p',
   'source': '_b9hwhmVLEeurzoz2zKnPPg',
   'target': '_b9hwiGVLEeurzoz2zKnPPg'},
2: {'information': 'q',
   'source': '_b9hwh2VLEeurzoz2zKnPPg',
   'target': '_b9hwiGVLEeurzoz2zKnPPg'},
3: {'information': 'p,q',
   'source': '_b9hwiGVLEeurzoz2zKnPPg',
   'target': '_b9hwjmVLEeurzoz2zKnPPg'},
4: {'information': 'p,q',
   'source': '_b9hwjmVLEeurzoz2zKnPPg',
   'target': '_b9hwj2VLEeurzoz2zKnPPg'},
5: {'information': 'phi(n)',
   'source': '_b9hwj2VLEeurzoz2zKnPPg',
   'target': '_b9hwkWVLEeurzoz2zKnPPg'},
6: {'information': 'phi(n)',
   'source': '_b9hwj2VLEeurzoz2zKnPPg',
   'target': '_b9hwkGVLEeurzoz2zKnPPg'},
7: {'information': 'e',
   'source': '_b9hwkGVLEeurzoz2zKnPPg',
   'target': '_b9hwkWVLEeurzoz2zKnPPg'},
8: {'information': 'e, phi(n)',
   'source': '_b9hwkWVLEeurzoz2zKnPPg',
   'target': '_b9hwkmVLEeurzoz2zKnPPg'},
9: {'information': 'p,q',
   'source': '_b9hwiGVLEeurzoz2zKnPPg',
   'target': '_b9hwk2VLEeurzoz2zKnPPg'},
10: {'information': 'n',
    'source': '_b9hwjmVLEeurzoz2zKnPPg',
    'target': '_b9hwk2VLEeurzoz2zKnPPg'},
11: {'information': 'e,d',
    'source': '_b9hwkmVLEeurzoz2zKnPPg',
    'target': '_b9hwk2VLEeurzoz2zKnPPg'},
12: {'information': 'e',
    'source': '_b9hwl2VLEeurzoz2zKnPPg',
    'target': '_b9hwlGVLEeurzoz2zKnPPg'},
13: {'information': 'n',
    'source': '_b9hwl2VLEeurzoz2zKnPPg',
    'target': '_b9hwlmVLEeurzoz2zKnPPg'},
14: {'information': 'm',
    'source': '_b9hwmGVLEeurzoz2zKnPPg',
    'target': '_b9hwlGVLEeurzoz2zKnPPg'},
15: {'information': 'm^e',
    'source': '_b9hwlGVLEeurzoz2zKnPPg',
    'target': '_b9hwlmVLEeurzoz2zKnPPg'},
16: {'information': 'c',
    'source': '_b9hwlmVLEeurzoz2zKnPPg',
    'target': '_b9hwmWVLEeurzoz2zKnPPg'},
17: {'information': 'c',
    'source': '_b9hwmmVLEeurzoz2zKnPPg',
    'target': '_b9hwm2VLEeurzoz2zKnPPg'},
18: {'information': 'c^d',
    'source': '_b9hwm2VLEeurzoz2zKnPPg',
    'target': '_b9hwnGVLEeurzoz2zKnPPg'},
19: {'information': 'm',
    'source': '_b9hwnGVLEeurzoz2zKnPPg',
    'target': '_b9hwnWVLEeurzoz2zKnPPg'},
20: {'information': 'd',
    'source': '_b9hwnmVLEeurzoz2zKnPPg',
    'target': '_b9hwm2VLEeurzoz2zKnPPg'},
21: {'information': 'n',
    'source': '_b9hwnmVLEeurzoz2zKnPPg',
    'target': '_b9hwnGVLEeurzoz2zKnPPg'}}
